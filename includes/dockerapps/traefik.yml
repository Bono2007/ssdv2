#!/bin/bash
#
# Title:      PGBlitz (Reference Title File)
# Author(s):  Admin9705
# URL:        https://pgblitz.com - http://github.pgblitz.com
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: True

  tasks:
  
    # VARIABLES ############################################################
    - name: 'Including variables'
      include_tasks: '/opt/seedbox-compose/includes/dockerapps/variables.yml'

    - name: Check config cloudflare exists
      stat:
        path: "/opt/seedbox/variables/cloudflare_api"
      register: cloudflare_config

    - name: "Set DNS Record on CloudFlare"
      include_tasks: '/opt/seedbox-compose/includes/config/roles/cloudflare/tasks/main.yml'
      vars:
        subdomain: traefik
      when: cloudflare_config.stat.exists
      
    - name: Remove Traefik
      docker_container:
        name: traefik
        state: absent

    - name: Create Basic Directories
      file: "path={{item}} state=directory mode=0775 owner=0 group=0"
      with_items:
        - /opt/seedbox/docker/traefik
        - /opt/seedbox/docker/traefik/acme

    - name: Check acme.json exists
      stat:
        path: "/opt/seedbox/docker/traefik/acme/acme.json"
      register: acme_json

    - name: 'Setting PG ENV'
      set_fact:
        pg_env:
          CF_API_EMAIL: '{{cloudflare_email.stdout}}'
          CF_API_KEY: '{{cloudflare_api.stdout}}'
      when: cloudflare_config.stat.exists

    - name: Installing ACME
      template:
        src: acme.json
        dest: /opt/seedbox/docker/traefik/acme/acme.json
        force: yes
        mode: 0600
        owner: '0'
        group: '0'
      when: acme_json.stat.exists == False

    - name: Installing Traefik.Toml
      template:
        src: traefik.toml
        dest: /opt/seedbox/docker/traefik/traefik.toml
        force: yes
        owner: '0'
        group: '0'
      when: cloudflare_config.stat.exists == False

    - name: Installing Traefik.Toml
      template:
        src: /opt/seedbox-compose/includes/dockerapps/templates/cloudflare/traefik.toml
        dest: /opt/seedbox/docker/traefik/traefik.toml
        force: yes
        owner: '0'
        group: '0'
      when: cloudflare_config.stat.exists

    - name: 'Ajout label traefik'
      set_fact:
        pg_labels:
          traefik.enable: 'true'
          traefik.port: '8080'
          traefik.frontend.rule: 'Host:traefik.{{domain.stdout}}'
          traefik.frontend.headers.SSLHost: '{{domain.stdout}}'
          traefik.frontend.headers.SSLRedirect: 'true'
          traefik.frontend.headers.STSIncludeSubdomains: 'true'
          traefik.frontend.headers.STSPreload: 'true'
          traefik.frontend.headers.STSSeconds: '315360000'
          traefik.frontend.headers.browserXSSFilter: 'true'
          traefik.frontend.headers.contentTypeNosniff: 'true'
          traefik.frontend.headers.customResponseHeaders: 'X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex'
          traefik.frontend.headers.forceSTSHeader: 'true'

    # MAIN #####################################################################
    - name: Deploy Traefik
      docker_container:
        name: traefik
        image: traefik:1.7
        pull: yes
        published_ports:
          - "443:443"
          - "80:80"
        command: ["--web", "--accessLog.filePath=/var/log/access.log", "--accessLog.filters.statusCodes=400-499"]
        env: "{{pg_env if cloudflare_config.stat.exists == True | default(false) else omit}}"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock:ro
          - /etc/localtime:/etc/localtime:ro
          - /opt/seedbox/docker/traefik/traefik.toml:/etc/traefik/traefik.toml:ro
          - /opt/seedbox/docker/traefik/acme:/etc/traefik/acme
          - /var/log/traefik:/var/log
        restart_policy: unless-stopped
        state: started
        labels: '{{pg_labels}}'
        networks:
          - name: traefik_proxy
