#!/bin/bash
#
# Title:      PGBlitz (Reference Title File)
# Author(s):  Admin9705
# URL:        https://pgblitz.com - http://github.pgblitz.com
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:
  
    # VARIABLES ############################################################
    - name: 'Including variables'
      include_tasks: '/opt/seedbox-compose/includes/dockerapps/variables.yml'

    - name: Check config cloudflare exists
      stat:
        path: "/opt/seedbox/variables/cloudflare_api"
      register: cloudflare_config

    - name: "Set DNS Record on CloudFlare"
      include_tasks: '/opt/seedbox-compose/includes/config/roles/cloudflare/tasks/main.yml'
      vars:
        subdomain: plex
      when: cloudflare_config.stat.exists

    - name: 'Register claim'
      shell: 'cat /opt/seedbox/variables/claim'
      register: claim
      ignore_errors: True

    - name: 'Register token'
      shell: 'cat /opt/seedbox/variables/token'
      register: token
      ignore_errors: True

    # FACTS #######################################################################
    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'plex'
        intport: '32400'
        extport: '32400'

    ######################################### FOR BOTH
    - name: Creating scripts and plugins paths
      file: 'path={{item}} state=directory mode=0775 owner={{userid.stdout}} group={{groupid.stdout}}'
      with_items:
        - '/opt/seedbox/docker/{{user.stdout}}/{{pgrole}}'

    - name: 'Set Default Labels'
      set_fact:
        default_labels:
          traefik.enable: 'true'
          traefik.port: '{{intport}}'
          traefik.frontend.rule: 'Host:{{pgrole}}.{{domain.stdout}}'
          traefik.frontend.headers.SSLHost: '{{domain.stdout}}'
          traefik.frontend.headers.SSLRedirect: 'true'
          traefik.frontend.headers.STSIncludeSubdomains: 'true'
          traefik.frontend.headers.STSPreload: 'true'
          traefik.frontend.headers.STSSeconds: '315360000'
          traefik.frontend.headers.browserXSSFilter: 'true'
          traefik.frontend.headers.contentTypeNosniff: 'true'
          traefik.frontend.headers.customResponseHeaders: 'X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex'
          traefik.frontend.headers.forceSTSHeader: 'true'

    - name: 'Set Default Volume'
      set_fact:
        default_volumes:
          - '/home/{{user.stdout}}:/home/{{user.stdout}}'
          - '/home/{{user.stdout}}/Medias:/data'
          - '/opt/seedbox/docker/{{user.stdout}}/plex/config:/config'
          - '/dev/shm:/transcode'

    - name: 'Establish Key Variables'
      set_fact:
        default_env:
          UID: '{{userid.stdout}}'
          GID: '{{groupid.stdout}}'

    - name: Check Preferences.xml exists
      stat:
        path: '/opt/seedbox/docker/{{user.stdout}}/{{pgrole}}/database/Library/Application Support/Plex Media Server/Preferences.xml'
      register: plex_prefs

    ############### This is needed because on a fresh installaions the value is missing and is defaulted to 1 Security perfered
    - name: secureConnections is missing
      xml:
        path: '/opt/seedbox/docker/{{user.stdout}}/{{pgrole}}/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences/@secureConnections
        count: yes
      register: secure_hits
      when:
        - plex_prefs.stat.exists

      ############### This is needed because on a fresh installaions the value is missing and is defaulted to 1 Security perfered
    - name: Add secureConnections if missing
      xml:
        path: '/opt/seedbox/docker/{{user.stdout}}/{{pgrole}}/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences
        attribute: secureConnections
        value: '1'
      when:
        - plex_prefs.stat.exists
        - secure_hits.count == 0

    - name: Read Preferences.xml
      xml:
        path: '/opt/seedbox/docker/{{user.stdout}}/{{pgrole}}/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences
        content: attribute
      register: plex_pref_content
      when: plex_prefs.stat.exists

    - name: Add https to default_label if secureConnection != 2
      set_fact:
        default_labels: "{{default_labels | combine( {'traefik.protocol': 'https'} )}}"
      when:
        - plex_prefs.stat.exists
        - plex_pref_content.matches[0]['Preferences']['secureConnections']

    - name: Read customConnections
      set_fact:
        customConnections: "{{plex_pref_content.matches[0]['Preferences']['customConnections']}}"
      when:
        - plex_prefs.stat.exists
        - plex_pref_content.matches[0]['Preferences']['customConnections'] is defined

    ######################################### DEPLOY PLEX REMOTE (ANSWER 2)
    - name: Deploy Plex Container (Remote Edition)
      docker_container:
        name: '{{pgrole}}'
        image: 'plexinc/pms-docker'
        pull: yes
        published_ports:
          - '{{extport}}:{{intport}}'
        env:
          PLEX_UID: '{{userid.stdout}}'
          PLEX_GID: '{{groupid.stdout}}'
          PLEX_CLAIM: '{{claim.stdout}}'
        purge_networks: yes
        networks:
          - name: traefik_proxy
        volumes: '{{default_volumes}}'
        etc_hosts:
          { 'analytics.plex.tv': '127.0.0.1', 'metrics.plex.tv': '127.0.0.1' }
        restart_policy: unless-stopped
        state: started
        labels: '{{default_labels}}'

    - name: Import 'plex_trash_fixer.py'
      get_url:
        url:  "https://raw.githubusercontent.com/l3uddz/plex_trash_fixer/master/plex_trash_fixer.py"
        dest: "/home/{{user.stdout}}/scripts/plex_trash_fixer.py"
        owner: "1001"
        group: "1001"
        mode: a+x

    - name: remplace
      replace:
        path: '/home/{{user.stdout}}/scripts/plex_trash_fixer.py'
        regexp: '/opt/plex'
        replace: '/opt/seedbox/docker/{{user.stdout}}/plex/config'


    - name: "Create /usr/local/bin symlink"
      file:
        src: "/home/{{user.stdout}}/scripts/plex_trash_fixer.py"
        dest: "/usr/local/bin/plextrash"
        state: link

    - name: Set cron
      shell: |
        (crontab -l | grep . ; echo "0 3 * * 6 /usr/local/bin/plextrash >> /home/{{user.stdout}}/scripts/plextrash.log") | crontab -

