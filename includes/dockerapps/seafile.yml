#!/bin/bash

##Auteur - Laster13-Mondedie.fr

---
- hosts: localhost
  gather_facts: false
  tasks:
  
    # VARIABLES ##################################################################
    - name: 'Including variables'
      include_tasks: '/opt/seedbox-compose/includes/dockerapps/variables.yml'

    - name: 'Register pass'
      shell: 'cat /opt/seedbox/variables/pass'
      register: pass
      ignore_errors: True
      
    # FACTS #######################################################################

    - name: Check config cloudflare exists
      stat:
        path: "/opt/seedbox/variables/cloudflare_api"
      register: cloudflare_config

    - name: "Set DNS Record on CloudFlare"
      include_tasks: '/opt/seedbox-compose/includes/config/roles/cloudflare/tasks/main.yml'
      vars:
        subdomain: seafile
      when: cloudflare_config.stat.exists

    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'seafile'
        image: 'seafileltd/seafile-mc:latest'

    - name: Create seafile-net network
      docker_network:
        name: seafile-net
        state: present

    - name: Creating paths
      file: 'path={{item}} state=directory mode=0775 owner={{userid.stdout}} group={{groupid.stdout}}'
      with_items:
        - '/opt/seedbox/docker/{{user.stdout}}/{{pgrole}}'

    # LABELS #######################################################################
    - name: 'Ajout label traefik'
      set_fact:
        pg_labels:
          traefik.docker.network: 'traefik_proxy'
          traefik.enable: 'true'
          traefik.seafapp.backend: 'Seafile'
          traefik.seafapp.frontend.rule: 'Host:{{pgrole}}.{{domain.stdout}}'          
          traefik.seafdav.frontend.rule: 'Host:{{pgrole}}.{{domain.stdout}};PathPrefixStrip:/seafdav'
          traefik.seafdav.port: '8080'
          traefik.seafhttp.frontend.rule: 'Host:{{pgrole}}.{{domain.stdout}};PathPrefixStrip:/seafhttp'
          traefik.seafhttp.port: '8082'
          traefik.frontend.headers.SSLHost: '{{domain.stdout}}'
          traefik.frontend.headers.SSLRedirect: 'true'
          traefik.frontend.headers.STSIncludeSubdomains: 'true'
          traefik.frontend.headers.STSPreload: 'true'
          traefik.frontend.headers.STSSeconds: '315360000'
          traefik.frontend.headers.browserXSSFilter: 'true'
          traefik.frontend.headers.contentTypeNosniff: 'true'
          traefik.frontend.headers.customResponseHeaders: 'X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex'
          traefik.frontend.headers.forceSTSHeader: 'true'

    - name: 'Deploying memcached'
      docker_container:
        name: 'memcached'
        image: 'memcached:1.5.6'
        entrypoint: 'memcached -m 256'
        pull: yes
        networks:
          - name: seafile-net

    - name: 'Deploying db-seafile'
      docker_container:
        name: 'db-seafile'
        recreate: true
        image: 'linuxserver/mariadb'
        pull: yes
        published_ports:
          - "127.0.0.1:3307:3306"
        volumes:
          - '/opt/seedbox/docker/{{user.stdout}}/{{pgrole}}/db-seafile:/config'
          - '/etc/localtime:/etc/localtime:ro'
        env:
          PUID: '{{userid.stdout}}'
          PGID: '{{groupid.stdout}}'
          MYSQL_ROOT_PASSWORD: '{{pass.stdout}}'
        restart_policy: unless-stopped
        networks:
          - name: seafile-net
        state: started

    - name: Wait for 10 seconds before continuing
      wait_for:
        timeout: 10

    - name: 'Setting PG Volumes'
      set_fact:
        pg_volumes:
          - '/opt/seedbox/docker/{{user.stdout}}/{{pgrole}}:/shared'

    - name: 'Setting PG ENV'
      set_fact:
        pg_env:
          DB_HOST: 'db-seafile'
          DB_ROOT_PASSWD: '{{pass.stdout}}'     
          SEAFILE_ADMIN_EMAIL: '{{mail.stdout}}'      
          SEAFILE_ADMIN_PASSWORD: '{{pass.stdout}}'
          SEAFILE_SERVER_HOSTNAME: '{{pgrole}}.{{domain.stdout}}'

    - name: 'Deploying {{pgrole}}'
      docker_container:
        name: '{{pgrole}}'
        image: '{{image}}'
        pull: yes
        volumes: '{{pg_volumes}}'
        env: '{{pg_env}}'
        restart_policy: unless-stopped
        networks:
          - name: traefik_proxy
          - name: seafile-net
        state: started
        labels: '{{pg_labels}}'