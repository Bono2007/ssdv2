---
- name: Create directory local
  file:
    path: "/home/{{ lookup('env','USER') }}/local/{{pgrole}}"
    state: directory

- name: Apply rights directory local
  become: yes
  file:
    path: "/home/{{ lookup('env','USER') }}/local/{{pgrole}}"
    owner: "{{user.name}}"
    group: "{{user.name}}"
    recurse: yes

- debug:
    msg: Transférer maintenant (via ftp ou ssh ) le fichier ovpn/conf fournit par votre VPN dans {{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/{{vpn}} !!

- name: Environ 2mn d'attente - config vpn et rutorrent en cours... Un peu long pas d'inquietude !
  wait_for:
    path: '{{ settings.storage }}/docker/{{user.name}}/{{pgrole}}/config/rtorrent/config/rtorrent.rc'
    state: present
    msg: Echec création rtorrent.rc

- name: 'Stopping {{pgrole}}'
  docker_container:
    name: '{{pgrole}}'
    state: stopped

- name: Clone Ratio Color plugin
  git:
    repo: https://github.com/Micdu70/rutorrent-ratiocolor.git
    dest: "{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rutorrent/user-plugins/ratiocolor"
    clone: yes

- name: Clone MaterialDesign theme
  git:
    repo: https://github.com/phlooo/ruTorrent-MaterialDesign.git
    dest: "{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rutorrent/user-plugins/theme/themes/MaterialDesign"
    clone: yes


- name: Set download location
  lineinfile:
    path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
    regexp: '#*directory\s*=.*'
    line: 'directory = /home/{{user.name}}/local/{{pgrole}}'
    state: present

- name: Set download location
  lineinfile:
    path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
    regexp: '#*directory.default.set\s*=.*'
    line: 'directory.default.set = /home/{{user.name}}/local/{{pgrole}}'
    state: present


# FIRST TIME CONFIGURATION ################################################################

- name: 'Configuring {{pgrole}} for first time use'
  block:
    - name: Upload Rate
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*upload_rate\s*=.*'
        line: 'upload_rate = 100000'
        state: present

    - name: Update Port Range
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*port_range\s*=.*'
        line: 'port_range = {{portforwarded}}-{{portforwarded}}'
        state: present

    - name: Download Rate
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*download_rate\s*=.*'
        line: 'download_rate = 100000'
        state: present

    - name: Low Disk - Set to 5GB
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*schedule\s*=\s*low_diskspace.*'
        line: 'schedule = low_diskspace,5,60,close_low_diskspace=5000M'
        state: present

    - name: max_downloads
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*throttle.max_downloads.global.set\s*=.*'
        line: 'throttle.max_downloads.global.set = 500'
        state: present

    - name: max_uploads
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*throttle.max_uploads.global.set\s*=.*'
        line: 'throttle.max_uploads.global.set = 50'
        state: present

    - name: No File Allocation
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*system.file.allocate.set\s*=.*'
        line: 'system.file.allocate.set = 0'
        state: present

    - name: min_peers
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*min_peers\s*=.*'
        line: 'min_peers = 40'
        state: present

    - name: max_peers
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*max_peers\s*=.*'
        line: 'max_peers = 1200'
        state: present

    - name: max_uploads
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*max_uploads\s*=.*'
        line: 'max_uploads = 15'
        state: present

    - name: max_downloads
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*max_downloads\s*=.*'
        line: 'max_downloads = 10'
        state: present

    - name: Upload Rate
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*upload_rate\s*=.*'
        line: 'upload_rate = 30000'
        state: present

    - name: Download Rate
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*download_rate\s*=.*'
        line: 'download_rate = 90000'
        state: present

    - name: Global Upload to Unlmited
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*throttle.global_up.max_rate.set_kb\s*=.*'
        line: 'throttle.global_up.max_rate.set_kb = 0'
        state: present

    - name: DHT disable
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*dht\s*=.*'
        line: '#dht = auto'
        state: present

    - name: DHT port
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*dht_port\s*=.*'
        line: '#dht_port = 6881'
        state: present

    - name: check Hash
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*check_hash\s*=.*'
        line: 'check_hash = no'
        state: present

    - name: Preload Piece to Host
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*pieces.preload.type\s*=.*'
        line: 'pieces.preload.type = 2'
        state: present

    - name: lower DNS timeout
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*network.http.dns_cache_timeout.set\s*=.*'
        line: 'network.http.dns_cache_timeout.set = 25'
        state: present

    - name: Network Send Buffer Size
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*network.send_buffer.size.set\s*=.*'
        line: 'network.send_buffer.size.set = 12M'
        state: present

    - name: Network Recived Buffer Size
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*network.receive_buffer.size.set\s*=.*'
        line: 'network.receive_buffer.size.set = 4M'
        state: present

    - name: Announce-Interval Min rescan
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*throttle.min_peers.seed.set\s*=.*'
        line: 'throttle.min_peers.seed.set = 0'
        state: present

    - name: Announce-Interval Max rescan
      lineinfile:
        path: '{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn/config/rtorrent/config/rtorrent.rc'
        regexp: '#*throttle.max_peers.seed.set\s*=.*'
        line: 'throttle.max_peers.seed.set = -1'
        state: present

  when: not rccheck.stat.exists

- name: Apply rights
  become: yes
  file:
    path: "{{ settings.storage }}/docker/{{user.name}}/rtorrentvpn"
    owner: "{{user.name}}"
    group: "{{user.name}}"
    recurse: yes

- name: 'Deploying {{pgrole}}'
  docker_container: "{{ docker_info }}"
