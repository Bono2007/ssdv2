#!/bin/bash

---
- hosts: localhost
  gather_facts: false
  vars_files:
    - /opt/seedbox/variables/account.yml
  tasks:
        
    # FACTS #######################################################################

    - name: "Variables | Set 'cloudflare_enabled' variable"
      set_fact:
        cloudflare_enabled: "{{ true if not(
            (cloudflare.login is undefined)
            or
            (cloudflare.login is none)
            or
            (cloudflare.login | trim | length == 0)
            or
            (cloudflare.api is undefined)
            or
            (cloudflare.api is none)
            or
            (cloudflare.api | trim | length == 0)
          )
            else false }}"

    - name: "Variables | Set 'oauth_enabled' variable"
      set_fact:
        oauth_enabled: "{{ true if not(
            (oauth.client is undefined)
            or
            (oauth.client is none)
            or
            (oauth.client | trim | length == 0)
            or
            (oauth.secret is undefined)
            or
            (oauth.secret is none)
            or
            (oauth.secret | trim | length == 0)
            or
            (oauth.account is undefined)
            or
            (oauth.account is none)
            or
            (oauth.account | trim | length == 0)
          )
            else false }}"

    - name: "Set DNS Record on CloudFlare"
      include_tasks: '/opt/seedbox-compose/includes/config/roles/cloudflare/tasks/main.yml'
      vars:
        subdomain: nextcloud
      when: cloudflare_enabled

    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'nextcloud'
        intport: '443'
        extport: '4645'
        image: 'linuxserver/nextcloud'

    - name: Create seafile-net network
      docker_network:
        name: nextcloud-net
        state: present

    - name: Creating paths
      file: 'path={{item}} state=directory mode=0775 owner={{user.userid}} group={{user.groupid}}'
      with_items:
        - '/opt/seedbox/docker/{{user.name}}/{{pgrole}}'

    # LABELS ######################################################################
    - name: 'Adding Traefik'
      set_fact:
        pg_labels:
          traefik.protocol: 'https'
          traefik.enable: 'true'
          traefik.https.port: '443'
          traefik.https.frontend.entryPoints: 'https'
          traefik.frontend.rule: 'Host:{{pgrole}}.{{user.domain}}'
          traefik.frontend.headers.SSLHost: '{{pgrole}}.{{user.domain}}'
          traefik.docker.network: 'traefik_proxy'
          traefik.frontend.passHostHeader: 'true'
          traefik.frontend.headers.SSLForceHost: 'true'
          traefik.frontend.headers.SSLRedirect: 'true'
          traefik.frontend.headers.browserXSSFilter: 'true'
          traefik.frontend.headers.contentTypeNosniff: 'true'
          traefik.frontend.headers.forceSTSHeader: 'true'
          traefik.frontend.headers.STSSeconds: '315360000'
          traefik.frontend.headers.STSIncludeSubdomains: 'true'
          traefik.frontend.headers.STSPreload: 'true'
          traefik.frontend.headers.frameDeny: "false"
          traefik.frontend.auth.forward.address: 'http://oauth:4181'
          traefik.frontend.auth.forward.authResponseHeaders: 'X-Forwarded-User'
          traefik.frontend.auth.forward.trustForwardHeader: 'true'

    - name: 'Deploying db-nextcloud'
      docker_container:
        name: 'db-nextcloud'
        recreate: true
        image: 'linuxserver/mariadb'
        pull: yes
        volumes:
          - '/opt/seedbox/docker/{{user.name}}/{{pgrole}}/db-nextcloud:/config'
          - '/etc/localtime:/etc/localtime:ro'
        env:
          PUID: '{{user.userid}}'
          PGID: '{{user.groupid}}'
          MYSQL_ROOT_PASSWORD: 'nextcloud'
          MYSQL_PASSWORD: 'nextcloud'
          MYSQL_DATABASE: 'nextcloud'
          MYSQL_USER: 'nextcloud'

        restart_policy: unless-stopped
        networks:
          - name: nextcloud-net
        state: started

    - name: Wait for 10 seconds before continuing
      wait_for:
        timeout: 10

    - name: 'Setting PG Volumes'
      set_fact:
        pg_volumes:
          - '/etc/localtime:/etc/localtime:ro'
          - '/opt/seedbox/docker/{{user.name}}/nextcloud/data:/data'
          - '/opt/seedbox/docker/{{user.name}}/{{pgrole}}/conf:/config'
          - '/home/{{user.name}}:/home/{{user.name}}'

    - name: 'Setting PG ENV'
      set_fact:
        pg_env:
          PUID: '{{user.userid}}'
          PGID: '{{user.groupid}}'
          MYSQL_ROOT_PASSWORD: 'nextcloud'
          MYSQL_PASSWORD: 'nextcloud'
          MYSQL_DATABASE: 'nextcloud'
          MYSQL_USER: 'nextcloud'

    - name: Create and start nextcloud container
      docker_container:
        name: nextcloud
        image: 'linuxserver/nextcloud'
        pull: yes
        env:
          PUID: '{{user.userid}}'
          PGID: '{{user.groupid}}'
        volumes: '{{pg_volumes}}'
        networks:
          - name: traefik_proxy
          - name: nextcloud-net
        restart_policy: unless-stopped
        state: started
        labels: '{{pg_labels}}'

######################### Coturn #############################################################

    - name: Creating paths
      file: 'path={{item}} state=directory mode=0775 owner={{user.userid}} group={{user.groupid}}'
      with_items:
        - '/opt/seedbox/docker/{{user.name}}/coturn'

    - name: 'SECRET'
      shell: | 
        openssl rand -hex 16
      register: secret

    - name: Get Public IP Address
      shell: dig -4 TXT +short o-o.myaddr.l.google.com @ns1.google.com | awk -F'\"' '{ print $2}'
      register: public_ip_lookup

    - name: 'Setting PG Volumes'
      set_fact:
        coturn_volumes:
          - '/opt/seedbox/docker/{{user.name}}/coturn:/var/lib/coturn'

    - name: Import default config
      template:
        src: /opt/seedbox-compose/includes/dockerapps/templates/nextcloud/turnserver.conf.j2
        dest: /opt/seedbox/docker/{{user.name}}/coturn/turnserver.conf
        force: yes

    - name: Create and start coturn container
      docker_container:
        name: coturn
        hostname: coturn
        image: 'woahbase/alpine-coturn'
        pull: yes
        env:
          PUID: '{{user.userid}}'
          PGID: '{{user.groupid}}'
        volumes: '{{coturn_volumes}}'
        network_mode: host
        restart_policy: unless-stopped
        state: started

####################### Collabora #############################################################

    - name: 'domain'
      shell: | 
        cat /home/{{user.name}}/resume | tail -1 | cut -d. -f2
      register: domain

    - name: 'domain'
      debug:
        msg: '{{ domain.stdout }}'

    - name: 'com'
      shell: | 
        cat /home/{{user.name}}/resume | tail -1 | cut -d. -f3
      register: com

    - name: 'com'
      debug:
        msg: '{{ com.stdout }}'

    - name: "Set DNS Record on CloudFlare"
      include_tasks: '/opt/seedbox-compose/includes/config/roles/cloudflare/tasks/main.yml'
      vars:
        subdomain: collabora
      when: cloudflare_enabled

    - name: 'Adding Traefik'
      set_fact:
        co_labels:
          traefik.enable: 'true'
          traefik.port: '9980'
          traefik.frontend.rule: 'Host:collabora.{{user.domain}}'
          traefik.docker.network: traefik_proxy

    - name: Create and start Collabora container
      docker_container:
        name: collabora
        image: 'collabora/code'
        pull: yes
        env:
          extra_params: '--o:ssl.enable=false --o:ssl.termination=true'
          domain: 'nextcloud\\.{{domain.stdout}}\\.{{com.stdout}}'
          username: '{{user.name}}'
          password: '{{user.pass}}'
          DONT_GEN_SSL_CERT: 'true'
        networks:
          - name: traefik_proxy
        restart_policy: unless-stopped
        state: started
        labels: '{{co_labels}}'

