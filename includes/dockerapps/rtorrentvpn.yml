
---
- hosts: localhost
  gather_facts: false
  vars_prompt:
    - name: vpn
      prompt: "Nom du foursisseur VPN"
      private: no
    - name: portforwarded
      prompt: "Port forwarded proposé par le fournisseur vpn"
      default: "8181"
      private: no
    - name: reseau
      prompt: "Plage reseau privé (ex: 192.168.1.0/24)"
      private: no
  vars_files:
    - /opt/seedbox/variables/account.yml
  tasks:
        
    # FACTS #######################################################################

    - name: create rtorrentvpn state
      shell: |
        echo "1" > /opt/seedbox/status/rtorrentvpn

    - name: Checking for existing app data
      stat:
        path: '/opt/seedbox/docker/{{user.name}}/authelia/configuration.yml'
      register: check

    - name: "Variables | Set 'cloudflare_enabled' variable"
      set_fact:
        cloudflare_enabled: "{{ true if not(
            (cloudflare.login is undefined)
            or
            (cloudflare.login is none)
            or
            (cloudflare.login | trim | length == 0)
            or
            (cloudflare.api is undefined)
            or
            (cloudflare.api is none)
            or
            (cloudflare.api | trim | length == 0)
          )
            else false }}"

    - name: "Variables | Set 'oauth_enabled' variable"
      set_fact:
        oauth_enabled: "{{ true if not(
            (oauth.client is undefined)
            or
            (oauth.client is none)
            or
            (oauth.client | trim | length == 0)
            or
            (oauth.secret is undefined)
            or
            (oauth.secret is none)
            or
            (oauth.secret | trim | length == 0)
            or
            (oauth.account is undefined)
            or
            (oauth.account is none)
            or
            (oauth.account | trim | length == 0)
          )
            else false }}"

    - name: "Variables | Set 'sub' variable"
      set_fact:
        sub_enabled: "{{ true if not(
            (sub.rtorrentvpn is undefined)
            or
            (sub.rtorrentvpn is none)
            or
            (sub.rtorrentvpn | trim | length == 0)
          )
            else false }}"

    - name: "Set DNS Record on CloudFlare"
      include_tasks: '/opt/seedbox-compose/includes/config/roles/cloudflare/tasks/main.yml'
      vars:
        subdomain: "{{sub.rtorrentvpn if sub_enabled else 'rtorrentvpn'}}"
      when: cloudflare_enabled

    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'rtorrentvpn'

    - name: Checking for existing app data
      stat:
        path: '/opt/seedbox/docker/{{user.name}}/rtorrentvpn/rtorrent/config/rtorrent.rc'
      register: rccheck

    - name: Checking for existing rutorrent-vpn.yml
      stat:
        path: '/opt/seedbox/conf/rutorrent-vpn.yml'
      register: rutorrentvpn

    - name: 'Creating rutorrent folder paths'
      file: 'path={{item}} state=directory mode=0775 owner={{user.userid}} group={{user.groupid}}'
      with_items:
        - '/home/{{user.name}}/local/rutorrent'

    - name: Install docker-compose
      shell: |
        curl -L "https://github.com/docker/compose/releases/download/1.26.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose

    - name: Import docker-compose.yml
      template:
        src: /opt/seedbox-compose/includes/dockerapps/templates/rutorrent/rutorrent-vpn.yml.j2
        dest: /opt/seedbox/conf/rutorrent-vpn.yml
      when: not rutorrentvpn.stat.exists

    - name: Docker compose
      command: docker-compose -f /opt/seedbox/conf/rutorrent-vpn.yml up -d


    - name: add resume file
      shell: |
        echo "{{pgrole}}-{{sub.rtorrentvpn if sub_enabled else pgrole}}.{{user.domain}}" >> /opt/temp.txt




