---
- name: Creating paths
  file: 'path={{item}} state=directory mode=0775 owner={{user.userid}} group={{user.groupid}}'
  with_items:
    - "{{ settings.storage }}/docker/{{ lookup('env','USER') }}/{{pgrole}}"

- name: Create new hashed jwt_secret
  shell: |
    docker run --rm authelia/authelia:latest authelia crypto rand --length 64 --charset alphanumeric | cut -d: -f2 | sed 's/ //g'
  register: jwt_secret

- name: Create new hashed secret
  shell: |
    docker run --rm authelia/authelia:latest authelia crypto rand --length 64 --charset alphanumeric | cut -d: -f2 | sed 's/ //g'
  register: secret

- name: Create new hashed encryption_key
  shell: |
    docker run --rm authelia/authelia:latest authelia crypto rand --length 64 --charset alphanumeric | cut -d: -f2 | sed 's/ //g'
  register: encryption_key

- name: Create new hashed
  shell: |
    docker run authelia/authelia:4.37.5 authelia hash-password {{user.pass}} | cut -d: -f2 | sed 's/ //g'
  register: password

- name: Generate random key
  set_fact:
    my_random_key: lookup('community.general.random_string', length=20)

- name: Import configuration.yml
  template:
    src: "{{ settings.source }}/includes/dockerapps/templates/{{pgrole}}/configuration.yml.j2"
    dest: "{{ settings.storage }}/docker/{{ lookup('env','USER') }}/{{pgrole}}/configuration.yml"

- name: Import users_database.yml
  template:
    src: "{{ settings.source }}/includes/dockerapps/templates/{{pgrole}}/users.yml.j2"
    dest: "{{ settings.storage }}/docker/{{ lookup('env','USER') }}/{{pgrole}}/users.yml"

- name: Prune Docker system
  command: docker system prune -af
  register: prune_result