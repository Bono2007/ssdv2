---
- name: Supprimer le conteneur Docker decypharr s'il existe
  community.docker.docker_container:
    name: decypharr
    state: absent
    force_kill: true

- name: Supression du dossier decypharr par precaution s'il existe
  become: yes
  file:
    path: "{{ item }}"
    state: absent
  with_items:
  - "/home/{{user.name}}/seedbox/docker/{{user.name}}/decypharr"

- name: Créer le dossier ~/alldebrid si nécessaire
  file:
    path: "{{ lookup('env','HOME') }}/alldebrid"
    state: directory
    mode: '0755'
  when: debrid_choice in ['alldebrid', 'both']

- name: Créer le dossier ~/realdebrid si nécessaire
  file:
    path: "{{ lookup('env','HOME') }}/realdebrid"
    state: directory
    mode: '0755'
  when: debrid_choice in ['realdebrid', 'both']

- name: Vérifier s'il existe un ou plusieurs services decypharr*.service
  become: yes
  shell: |
    ls /etc/systemd/system/decypharr*.service 2>/dev/null | wc -l
  register: decypharr_service_count
  changed_when: false

- name: Stopper et désactiver tous les services decypharr*
  become: yes
  shell: |
    for service in $(systemctl list-unit-files | grep '^decypharr.*\.service' | awk '{print $1}'); do
      systemctl stop "$service"
      systemctl disable "$service"
    done
  when: decypharr_service_count.stdout | int > 0

- name: Supprimer tous les fichiers decypharr*.service
  become: yes
  shell: |
    find /etc/systemd/system -maxdepth 1 -type f -name 'decypharr*.service' -exec rm -f {} +
  when: decypharr_service_count.stdout | int > 0

- name: S'assurer que rclone.conf existe
  file:
    path: "{{ lookup('env', 'HOME') }}/.config/rclone/rclone.conf"
    state: touch

- name: Ajouter la remote Alldebrid à rclone.conf
  blockinfile:
    path: "{{ lookup('env', 'HOME') }}/.config/rclone/rclone.conf"
    marker: "# {mark} ANSIBLE BLOCK Alldebrid"
    block: |
      [decypharr-alldebrid]
      type = webdav
      url = http://localhost:8282/webdav/alldebrid
      vendor = other
      pacer_min_sleep = 0
  when: debrid_choice in ['alldebrid', 'both']

- name: Ajouter une ligne vide entre les deux blocs (si both)
  lineinfile:
    path: "{{ lookup('env', 'HOME') }}/.config/rclone/rclone.conf"
    insertafter: "# END ANSIBLE BLOCK Alldebrid"
    line: ""
    state: present
  when: debrid_choice == 'both'

- name: Ajouter la remote Real-Debrid à rclone.conf
  blockinfile:
    path: "{{ lookup('env', 'HOME') }}/.config/rclone/rclone.conf"
    marker: "# {mark} ANSIBLE BLOCK RealDebrid"
    block: |
      [decypharr-realdebrid]
      type = webdav
      url = http://localhost:8282/webdav/realdebrid
      vendor = other
      pacer_min_sleep = 0
  when: debrid_choice in ['realdebrid', 'both']

- name: Créer le fichier systemd pour Alldebrid
  become: yes
  template:
    dest: "/etc/systemd/system/decypharr-alldebrid.service"
    src: "{{ lookup('env', 'SETTINGS_SOURCE') }}/includes/config/roles/rclone/templates/decypharr-alldebrid.service.j2"
  when: debrid_choice in ['alldebrid', 'both']

- name: Créer le fichier systemd pour Real-Debrid
  become: yes
  template:
    dest: "/etc/systemd/system/decypharr-realdebrid.service"
    src: "{{ lookup('env', 'SETTINGS_SOURCE') }}/includes/config/roles/rclone/templates/decypharr-realdebrid.service.j2"
  when: debrid_choice in ['realdebrid', 'both']

- name: Lancer le service decypharr-alldebrid
  become: yes
  service:
    name: decypharr-alldebrid
    state: started
    enabled: yes
    daemon_reload: yes
  when: debrid_choice in ['alldebrid', 'both']

- name: Lancer le service decypharr-realdebrid
  become: yes
  service:
    name: decypharr-realdebrid
    state: started
    enabled: yes
    daemon_reload: yes
  when: debrid_choice in ['realdebrid', 'both']
