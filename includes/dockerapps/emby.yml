#!/bin/bash

---
- hosts: localhost
  gather_facts: false
  vars_files:
    - /opt/seedbox/variables/account.yml
  tasks:
        
    # FACTS #######################################################################

    - name: "Variables | Set 'cloudflare_enabled' variable"
      set_fact:
        cloudflare_enabled: "{{ true if not(
            (cloudflare.login is undefined)
            or
            (cloudflare.login is none)
            or
            (cloudflare.login | trim | length == 0)
            or
            (cloudflare.api is undefined)
            or
            (cloudflare.api is none)
            or
            (cloudflare.api | trim | length == 0)
          )
            else false }}"

    - name: "Variables | Set 'oauth_enabled' variable"
      set_fact:
        oauth_enabled: "{{ true if not(
            (oauth.client is undefined)
            or
            (oauth.client is none)
            or
            (oauth.client | trim | length == 0)
            or
            (oauth.secret is undefined)
            or
            (oauth.secret is none)
            or
            (oauth.secret | trim | length == 0)
            or
            (oauth.account is undefined)
            or
            (oauth.account is none)
            or
            (oauth.account | trim | length == 0)
          )
            else false }}"

    - name: "Set DNS Record on CloudFlare"
      include_tasks: '/opt/seedbox-compose/includes/config/roles/cloudflare/tasks/main.yml'
      vars:
        subdomain: emby
      when: cloudflare_enabled

    - name: 'Set Known Facts'
      set_fact:
        pgrole: 'emby'
        intport: '8096'
        extport: '8096'
        image: 'emby/embyserver'

    - name: Creating paths
      file: 'path={{item}} state=directory mode=0775 owner={{user.userid}} group={{user.groupid}}'
      with_items:
        - '/opt/seedbox/docker/{{user.name}}/{{pgrole}}'

    # CORE (MANDATORY) ############################################################
    - name: 'XML Check'
      stat:
        path: /opt/seedbox/docker/{{user.name}}/{{pgrole}}/config/system.xml
      register: xmlcheck
      
    # LABELS ######################################################################
    - name: 'Adding Traefik'
      set_fact:
        pg_labels:
          traefik.enable: 'true'
          traefik.port: '{{intport}}'
          traefik.frontend.rule: 'Host:{{pgrole}}.{{user.domain}}'
          traefik.frontend.headers.SSLHost: '{{pgrole}}.{{user.domain}}'
          traefik.frontend.headers.SSLRedirect: 'true'
          traefik.frontend.headers.STSIncludeSubdomains: 'true'
          traefik.frontend.headers.STSPreload: 'true'
          traefik.frontend.headers.STSSeconds: '315360000'
          traefik.frontend.headers.browserXSSFilter: 'true'
          traefik.frontend.headers.contentTypeNosniff: 'true'
          traefik.frontend.headers.customResponseHeaders: 'X-Robots-Tag:noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex'
          traefik.frontend.headers.forceSTSHeader: 'true'

    - name: 'Setting PG Volumes'
      set_fact:
        pg_volumes:
          - '/etc/localtime:/etc/localtime:ro'
          - '/opt/seedbox/docker/{{user.name}}/{{pgrole}}:/config'
          - '/home/{{user.name}}:/home/{{user.name}}'

    - name: 'Setting PG ENV'
      set_fact:
        pg_env:
          UID: '{{user.userid}}'
          GID: '{{user.groupid}}'
          GIDLIST: '{{user.groupid}}'

    # MAIN DEPLOYMENT #############################################################
    - name: 'Deploying {{pgrole}}'
      docker_container:
        name: '{{pgrole}}'
        image: '{{image}}'
        pull: yes
        published_ports:
          - '{{extport}}:{{intport}}'
        volumes: '{{pg_volumes}}'
        env: '{{pg_env}}'
        restart_policy: unless-stopped
        networks:
          - name: traefik_proxy
        expose: '8096'
        state: started
        labels: '{{pg_labels}}'

    # FIRST TIME CONFIGURATION ###########################################################
    - name: 'Configuring {{pgrole}} for first time use'
      block:

      - name: 'Pending XML Generation'
        wait_for:
          path: '/opt/seedbox/docker/{{user.name}}/{{pgrole}}/config/system.xml'
          state: present

      - name: 'Wait 5 Seconds'
        wait_for:
          timeout: 5

      - name: 'Stop {{pgrole}}'
        docker_container:
          name: '{{pgrole}}'
          state: stopped

      - name: 'Turn Off Reporting'
        xml:
          path: '/opt/seedbox/docker/{{user.name}}/{{pgrole}}/config/system.xml'
          xpath: /ServerConfiguration/EnableAnonymousUsageReporting
          value: 'false'

      - name: 'Restart {{pgrole}}'
        docker_container:
          name: '{{pgrole}}'
          state: started
      when: not xmlcheck.stat.exists
