#########################################################################
# Title:         Cloudbox: Traktarr Role                                #
# Author(s):     l3uddz, desimaniac                                     #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- hosts: localhost
  gather_facts: false
  vars_files:
    - /opt/seedbox/variables/account.yml
  tasks:

    - name: Check if traktarr service exists
      stat:
        path: "/etc/systemd/system/traktarr.service"
      register: traktarr_service

    - name: Stop existing traktarr service
      become: yes
      systemd: state=stopped name=traktarr
      when: traktarr_service.stat.exists

    - name: Create traktarr directories
      become: yes
      file: "path={{ item }} state=directory mode=0775 owner={{user.userid}} group={{user.groupid}} recurse=yes"
      with_items:
        - /home/{{user.name}}/scripts/traktarr

    - name: Clone traktarr
      git:
        repo: https://github.com/l3uddz/traktarr/
        dest: /home/{{user.name}}/scripts/traktarr
        version: HEAD
        force: yes

    - name: Install pip requirements
      pip:
        requirements: /home/{{user.name}}/scripts/traktarr/requirements.txt
        virtualenv: '{{ settings.source }}/venv'

    - name: Check if traktarr config exists
      stat:
        path: "/home/{{user.name}}/scripts/traktarr/config.json"
      register: traktarr_config

    - name: "Check if sonarr exists"
      stat:
        path: "/opt/seedbox/docker/{{user.name}}/sonarr/config/config.xml"
      register: sonarr_config
      when: not traktarr_config.stat.exists

    - name: "When sonarr exists, add api key to traktar config"
      block:

      - name: Pull sonarr api key
        xml:
          path: "/opt/seedbox/docker/{{user.name}}/sonarr/config/config.xml"
          xpath: /Config/ApiKey
          content: text
        register: xmlresp

      - name: Set sonarr api Key
        set_fact:
          sonarr_api_key: "{{ xmlresp.matches[0].ApiKey }}"

      when: (not traktarr_config.stat.exists) and (sonarr_config.stat.exists)

    - name: "Check if radarr exists"
      stat:
        path: "/opt/seedbox/docker/{{user.name}}/radarr/config/config.xml"
      register: radarr_config
      when: not traktarr_config.stat.exists

    - name: "When radarr exists, add api key to traktar config"
      block:

      - name: Pull radarr api key
        xml:
          path: "/opt/seedbox/docker/{{user.name}}/radarr/config/config.xml"
          xpath: /Config/ApiKey
          content: text
        register: xmlresp

      - name: Set radarr api Key
        set_fact:
          radarr_api_key: "{{ xmlresp.matches[0].ApiKey }}"

      when: (not traktarr_config.stat.exists) and (radarr_config.stat.exists)

    - name: Import default config
      become: yes
      template:
        src: {{ settings.source }}/includes/config/roles/traktarr/templates/config.json.j2
        dest: /home/{{user.name}}/scripts/traktarr/config.json
        owner: "{{user.userid}}"
        group: "{{user.groupid}}"
        mode: 0775
        force: yes
      when: not traktarr_config.stat.exists

    - name: Set traktarr.py as executable
      become: yes
      file:
        path: /home/{{user.name}}/scripts/traktarr/traktarr.py
        owner: "{{user.userid}}"
        group: "{{user.groupid}}"
        mode: a+x

    - name: Set directory permissions
      file: "path=/home/{{user.name}}/scripts/traktarr state=directory owner={{user.userid}} group={{user.groupid}} recurse=yes"
      become: yes

    - name: "Create /usr/local/bin symlink"
      become: yes
      file:
        src: "/home/{{user.name}}/scripts/traktarr/traktarr.py"
        dest: "/usr/local/bin/traktarr"
        state: link

    - name: Import traktarr service
      become: yes
      template:
        src: {{ settings.source }}/includes/config/roles/traktarr/templates/traktarr.service.j2
        dest: /etc/systemd/system/traktarr.service
        force: yes
        owner: "{{user.userid}}"
        group: "{{user.groupid}}"
      when: not traktarr_service.stat.exists

    - name: Load traktarr service
      become: yes
      systemd:
        name: traktarr
        state: "{{ traktarr_config.stat.exists | ternary('started','stopped') }}"
        enabled: "{{ traktarr_config.stat.exists | ternary('yes','no') }}"
        daemon_reload: yes
