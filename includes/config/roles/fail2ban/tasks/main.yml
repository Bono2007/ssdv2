---
- hosts: localhost
  gather_facts: true

  vars_files:
    - "{{ lookup('env','CONFDIR') }}/variables/account.yml"
  vars:
    - local_ip: "{{ ansible_env['SSH_CLIENT'].split() | first }}"
    - ssh_port: "{{ ansible_env['SSH_CLIENT'].split() | last }}"
  tasks:
        
    # FACTS #######################################################################

    - name: "Variables | Set 'cloudflare_enabled' variable"
      set_fact:
        cloudflare_enabled: "{{ true if not(
            (cloudflare.login is undefined)
            or
            (cloudflare.login is none)
            or
            (cloudflare.login | trim | length == 0)
            or
            (cloudflare.api is undefined)
            or
            (cloudflare.api is none)
            or
            (cloudflare.api | trim | length == 0)
          )
            else false }}"

    - name: Install Fail2ban
      become: yes
      apt:
        state: present
        name:
          - fail2ban
      ignore_errors: yes

    - name: Stop Fail2ban service
      become: yes
      systemd:
        name: fail2ban
        state: stopped

    - name: Import customs.conf 
      become: yes
      template:
        src: "{{ lookup('env','BASEDIR') }}/includes/config/roles/fail2ban/templates/custom.conf.j2"
        dest: /etc/fail2ban/jail.d/custom.conf
        force: yes

    - name: Import regex LOG4J
      become: yes
      template:
        src: "{{ lookup('env','BASEDIR') }}/includes/config/roles/fail2ban/templates/apache-log4j.conf.j2"
        dest: /etc/fail2ban/filter.d/apache-log4j.conf
        force: yes

    - name: Import traefik-auth.conf
      become: yes
      template:
        src: "{{ lookup('env','BASEDIR') }}/includes/config/roles/fail2ban/templates/traefik-auth.conf.j2"
        dest: /etc/fail2ban/filter.d/traefik-auth.conf
        force: yes

    - name: Import traefik-botsearch.conf
      become: yes
      template:
        src: "{{ lookup('env','BASEDIR') }}/includes/config/roles/fail2ban/templates/traefik-botsearch.conf.j2"
        dest: /etc/fail2ban/filter.d/traefik-botsearch.conf
        force: yes

    - name: "'files.conf when not Cloudflare exist' Tasks"
      become: yes
      block:

      - name: Import traefik.conf
        template:
          src: "{{ lookup('env','BASEDIR') }}/includes/config/roles/fail2ban/templates/traefik.conf.j2"
          dest: /etc/fail2ban/jail.d/traefik.conf
          force: yes

      - name: Import docker-action.conf
        template:
          src: "{{ lookup('env','BASEDIR') }}/includes/config/roles/fail2ban/templates/docker-action.conf.j2"
          dest: /etc/fail2ban/action.d/docker-action.conf
          force: yes
      when: not cloudflare_enabled


    - name: "'files.conf when Cloudflare exist' Tasks"
      become: yes
      block:

      - name: Import cloudflare-apiv4.conf
        template:
          src: "{{ lookup('env','BASEDIR') }}/includes/config/roles/fail2ban/templates/cloudflare-apiv4.conf.j2"
          dest: /etc/fail2ban/action.d/cloudflare-apiv4.conf
          force: yes

      - name: Import traefik_cloudflare.conf
        template:
          src: "{{ lookup('env','BASEDIR') }}/includes/config/roles/fail2ban/templates/traefik_cloudflare.conf.j2"
          dest: /etc/fail2ban/jail.d/traefik_cloudflare.conf
          force: yes

      when: cloudflare_enabled

    - name: Sart Fail2ban service
      become: yes
      systemd:
        name: fail2ban
        state: started