#########################################################################
# Title:         Cloudbox: Rclone Role                                  #
# Author(s):     l3uddz, desimaniac                                     #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- hosts: localhost
  become: yes
  gather_facts: false
  vars_files:
    - ['settings.yml']
    - ["{{ lookup('env','SETTINGS_STORAGE') }}/variables/account.yml"]
  tasks:

    - name: Build URL Tasks
      import_tasks: "build_url.yml"

    - name: Install Binary Tasks
      import_tasks: "install_binary.yml"

    - name: Check if mergerfs_plexdrive.service exists
      stat:
        path: "/etc/systemd/system/mergerfs_plexdrive.service"
      register: mergerfs_plexdrive_service

    - name: Service Tasks
      block:

      - name: Populate Service Facts
        service_facts:

      - name: Get plexdrive service state
        set_fact:
          mergerfs_plexdrive_service_running: "{{ (services['mergerfs_plexdrive.service'] is defined) and (services['mergerfs_plexdrive.service']['state'] == 'running') }}"

      - name: Stop mergerfs_plexdrive service
        systemd:
          name: mergerfs_plexdrive
          state: stopped
          enabled: no
        when: mergerfs_plexdrive_service_running

      - name: delete mergerfs_plexdrive.service
        shell: |
          rm /etc/systemd/system/mergerfs_plexdrive.service

      when: mergerfs_plexdrive_service.stat.exists

    - name: Check if rclone_plexdrive.service exists
      stat:
        path: "/etc/systemd/system/rclone_plexdrive.service"
      register: rclone_plexdrive_service

    - name: Service Tasks
      block:

      - name: Populate Service Facts
        service_facts:

      - name: Get rclone_plexdrive service state
        set_fact:
          rclone_plexdrive_service_running: "{{ (services['rclone_plexdrive.service'] is defined) and (services['rclone_plexdrive.service']['state'] == 'running') }}"

      - name: Stop rclone_plexdrive service
        systemd:
          name: rclone_plexdrive
          state: stopped
          enabled: no
        when: rclone_plexdrive_service_running

      - name: delete rclone_plexdrive.service
        shell: |
          rm /etc/systemd/system/rclone_plexdrive.service

      when: rclone_plexdrive_service.stat.exists

    - name: Check if plexdrive.service exists
      stat:
        path: "/etc/systemd/system/plexdrive.service"
      register: plexdrive_service

    - name: Service Tasks
      block:

      - name: Populate Service Facts
        service_facts:

      - name: Get plexdrive service state
        set_fact:
          plexdrive_service_running: "{{ (services['plexdrive.service'] is defined) and (services['plexdrive.service']['state'] == 'running') }}"

      - name: Stop plexdrive service
        become: yes
        systemd:
          name: plexdrive
          state: stopped
          enabled: no
        when: plexdrive_service_running

      - name: delete plexdrive.service
        shell: |
          rm /etc/systemd/system/plexdrive.service
        when: plexdrive_service_running

      when: plexdrive_service.stat.exists

    - name: Check if rclone.service exists
      stat:
        path: "/etc/systemd/system/rclone.service"
      register: rclone_service

    - name: Service Tasks
      block:

      - name: Populate Service Facts
        service_facts:

      - name: Get rclone service state
        set_fact:
          rclone_service_running: "{{ (services['rclone.service'] is defined) and (services['rclone.service']['state'] == 'running') }}"

      - name: Stop rclone service
        systemd:
          name: rclone
          state: stopped
        when: rclone_service_running

      when: rclone_service.stat.exists

    - name: Import systemd rclone.service
      template:
        src: "{{ settings.source }}/includes/config/roles/rclone/templates/rclone.service.j2"
        dest: /etc/systemd/system/rclone.service
        owner: "root"
        group: "root"
        mode: 0775
        force: yes

    - name: Start rclone (Please Wait)
      systemd:
        daemon_reload: yes
        state: started
        name: rclone
        enabled: yes

    - name: Check if rclone is running
      shell: pgrep rclone
      ignore_errors: yes
      changed_when: false
      register: service_rclone_status

    - name: Report status of rclone
      fail:
        msg: |
          - "L'installation de rclone a échoué, Vérifier la configuration du fichier rclone.conf"
      when: service_rclone_status.rc != 0

    - debug:
        msg:
        - "L'installation de rclone s'est déroulée avec succés: Version Rclone {{ rclone_version.stdout }} installée"
        - "Le lancement de rclone s'est effectué avec succés"
      when: service_rclone_status.rc == 0