#########################################################################
# Title:         Cloudbox: Cloudplow Role                               #
# Author(s):     l3uddz, desimaniac                                     #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---

- hosts: localhost
  gather_facts: false
  tasks:

    # VARIABLES ############################################################
    - name: 'Including variables'
      include_tasks: '/opt/seedbox-compose/includes/dockerapps/variables.yml'

    - name: 'Register token'
      shell: 'cat /opt/seedbox/variables/token'
      register: token
      ignore_errors: True

    - name: 'Register remote'
      shell: 'cat /opt/seedbox/variables/remote'
      register: remote
      ignore_errors: True

    - name: Check unionfs_service service exists
      stat:
        path: "/etc/systemd/system/unionfs_cleaner.service"
      register: unionfs_cleaner_service

    - name: Check cloudplow service exists
      stat:
        path: "/etc/systemd/system/cloudplow.service"
      register: cloudplow_service

    - name: Stop and disable existing unionfs_cleaner service
      systemd: state=stopped enabled=no name=unionfs_cleaner
      when: unionfs_cleaner_service.stat.exists

    - name: Remove unionfs_cleaner.service
      file: "path=/etc/systemd/system/unionfs_cleaner.service state=absent force=yes"
      when: unionfs_cleaner_service.stat.exists

    - name: Stop existing cloudplow service
      systemd: state=stopped name=cloudplow
      when: cloudplow_service.stat.exists

    - name: Create cloudplow directories
      file: "path={{ item }} state=directory mode=0775 owner={{userid.stdout}} group={{groupid.stdout}} recurse=yes"
      with_items:
        - /home/{{user.stdout}}/scripts/cloudplow

    - name: Clone cloudplow
      git:
        repo: https://github.com/l3uddz/cloudplow/
        dest: /home/{{user.stdout}}/scripts/cloudplow
        version: HEAD
        force: yes
      become: yes
      become_user: "{{user.stdout}}"

    - name: Install pip requirements
      pip:
        requirements: /home/{{user.stdout}}/scripts/cloudplow/requirements.txt
        executable: pip3

    - name: Check config exists
      stat:
        path: "/home/{{user.stdout}}/scripts/cloudplow/config.json"
      register: cloudplow_config

    - name: Import default config
      template:
        src: /opt/seedbox-compose/includes/config/roles/cloudplow/templates/config.json.j2
        dest: /home/{{user.stdout}}/scripts/cloudplow/config.json
        owner: "{{userid.stdout}}"
        group: "{{groupid.stdout}}"
        mode: 0775
        force: yes
      when: not cloudplow_config.stat.exists

    - name: Set cloudplow.py as executable
      file:
        path: /home/{{user.stdout}}/scripts/cloudplow/cloudplow.py
        owner: "{{userid.stdout}}"
        group: "{{groupid.stdout}}"
        mode: a+x

    - name: Set directory permissions
      file: "path=/home/{{user.stdout}}/scripts/cloudplow state=directory owner=0 group=0 recurse=yes"

    - name: "Create /usr/local/bin symlink"
      file:
        src: "/home/{{user.stdout}}/scripts/cloudplow/cloudplow.py"
        dest: "/usr/local/bin/cloudplow"
        state: link

    - name: Import cloudplow service
      template:
        src: /opt/seedbox-compose/includes/config/roles/cloudplow/templates/cloudplow.service.j2
        dest: /etc/systemd/system/cloudplow.service
        force: yes

    - name: Start cloudplow service
      systemd: state=started name=cloudplow daemon_reload=yes enabled=yes
