#########################################################################
# Title:         Cloudbox: Cloudplow Role                               #
# Author(s):     l3uddz, desimaniac                                     #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---

- hosts: localhost
  gather_facts: false
  vars_files:
    - "{{ lookup('env','CONFDIR') }}/variables/account.yml"
  tasks:

    - name: Check if crop.service exists
      stat:
        path: "/etc/systemd/system/crop_upload.service"
      register: crop_upload_service

    - name: Service Tasks
      block:

      - name: Populate Service Facts
        service_facts:

      - name: stopped Systemd Unit
        systemd:
          name: '{{ item }}.service'
          state: stopped
          enabled: no
        with_items:
          - crop_upload
          - crop_sync

      - name: stopped Systemd Unit
        systemd:
          name: '{{ item }}.timer'
          state: stopped
          enabled: no
        with_items:
          - crop_upload
          - crop_sync

      - name: delete crop folder
        shell: |
          rm /etc/systemd/system/crop_upload.service
          rm /etc/systemd/system/crop_sync.service
          rm /etc/systemd/system/crop_upload.timer
          rm /etc/systemd/system/crop_sync.timer
          rm -rf /home/{{user.name}}/scripts/crop

      when: crop_upload_service.stat.exists

    - name: Check if cloudplow.service exists
      stat:
        path: "/etc/systemd/system/cloudplow.service"
      register: cloudplow_service

    - name: Service Tasks
      block:

      - name: Populate Service Facts
        service_facts:

      - name: Get cloudplow service state
        set_fact:
          cloudplow_service_running: "{{ (services['cloudplow.service'] is defined) and (services['cloudplow.service']['state'] == 'running') }}"

      - name: Stop cloudplow service
        systemd:
          name: cloudplow
          state: stopped
        when: cloudplow_service_running

      when: cloudplow_service.stat.exists

    - name: Create cloudplow directories
      become: yes
      file: "path={{ item }} state=directory mode=0775 owner={{ lookup('env','MYUID') }} group={{ lookup('env','MYGID') }} recurse=yes"
      with_items:
        - /home/{{ lookup('env','USER') }}/scripts/cloudplow

    - name: Clone cloudplow
      git:
        repo: https://github.com/l3uddz/cloudplow/
        dest: /home/{{ lookup('env','USER') }}/scripts/cloudplow
        version: HEAD
        force: yes
      become: yes
      become_user: "{{ lookup('env','USER') }}"

    - name: Install pip requirements
      pip:
        requirements: "/home/{{ lookup('env','USER') }}/scripts/cloudplow/requirements.txt"
        executable: pip
        extra_args: --user

    - name: Check config exists
      stat:
        path: "/home/{{ lookup('env','USER') }}/scripts/cloudplow/config.json"
      register: cloudplow_config

    - name: Import default config
      template:
        src: "{{ lookup('env','BASEDIR') }}/includes/config/roles/cloudplow/templates/config.json.j2"
        dest: /home/{{ lookup('env','USER') }}/scripts/cloudplow/config.json
        owner: "{{ lookup('env','MYUID') }}"
        group: "{{ lookup('env','MYGID') }}"
        mode: 0775
        force: yes
      when: not cloudplow_config.stat.exists

    - name: Set cloudplow.py as executable
      file:
        path: /home/{{ lookup('env','USER') }}/scripts/cloudplow/cloudplow.py
        owner: "{{ lookup('env','MYUID') }}"
        group: "{{ lookup('env','MYGID') }}"
        mode: a+x

    - name: Set directory permissions
      file: "path=/home/{{ lookup('env','USER') }}/scripts/cloudplow state=directory owner={{ lookup('env','MYUID') }} group={{ lookup('env','MYGID') }} recurse=yes"

    - name: "Create /usr/local/bin symlink"
      become: yes
      file:
        src: "/home/{{ lookup('env','USER') }}/scripts/cloudplow/cloudplow.py"
        dest: "/usr/local/bin/cloudplow"
        state: link

    - name: Import cloudplow service
      become: yes
      template:
        src: "{{ lookup('env','BASEDIR') }}/includes/config/roles/cloudplow/templates/cloudplow.service.j2"
        dest: /etc/systemd/system/cloudplow.service
        force: yes

    - name: Start cloudplow service
      become: yes
      systemd: state=started name=cloudplow daemon_reload=yes enabled=yes
